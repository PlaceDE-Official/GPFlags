plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id("io.papermc.paperweight.userdev") version "1.5.5"
    id("xyz.jpenilla.run-paper") version "2.1.0" // Adds runServer and runMojangMappedServer tasks for testing
}

group = 'army.place'
version = '1.0.0'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "rs-git"
        url = "https://git.redstonesucht.de/api/packages/DevMiner/maven"
    }
    maven {
        name = "spigot-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "CodeMC"
        url = "https://repo.codemc.org/repository/maven-public"
    }
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
    maven {
        name = "purpur"
        url = "https://repo.purpurmc.org/snapshots"
    }
    maven {
        name = "nexus"
        url = "https://mvn.lumine.io/repository/maven-public/"
    }
    maven {
        name = "akiradev-repo"
        url = "https://repo.akiradev.xyz/repository/public/"
    }
    maven {
        name = "devmart-other"
        url = "https://nexuslite.gcnt.net/repos/other/"
    }
}

dependencies {
    paperweight.devBundle("army.place.folia", "1.20.1-R0.1-SNAPSHOT")
    compileOnly "com.tcoded:FoliaLib:0.2.4"
    compileOnly "com.griefprevention:GriefPrevention:17.0.0-SNAPSHOT"
    compileOnly "com.gmail.nossr50.mcMMO:mcMMO:2.1.108"
    compileOnly "org.jetbrains:annotations:23.0.0"
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    compileOnly "io.lumine:Mythic-Dist:5.0.3-SNAPSHOT"
    compileOnly "com.magmaguy:EliteMobs:8.0.2"
    compileOnly "org.apache.maven:maven-artifact:3.6.3"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

runPaper.folia.registerTask()

tasks {
    runFolia() {
        minecraftVersion("1.20.1")
        serverJar(file("./run/folia-bundler-1.20.1-R0.1-SNAPSHOT-reobf.jar"))
    }
}